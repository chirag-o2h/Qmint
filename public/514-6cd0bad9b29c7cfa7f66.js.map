{"version":3,"file":"514-6cd0bad9b29c7cfa7f66.js","mappings":"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","sources":["webpack://qmint-store-frontend/./node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","webpack://qmint-store-frontend/./node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroupContext.js","webpack://qmint-store-frontend/./node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroupButtonContext.js","webpack://qmint-store-frontend/./node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","webpack://qmint-store-frontend/./node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","webpack://qmint-store-frontend/./node_modules/@mui/utils/getValidReactChildren/getValidReactChildren.js","webpack://qmint-store-frontend/./node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","webpack://qmint-store-frontend/./node_modules/@mui/material/ToggleButton/ToggleButton.js","webpack://qmint-store-frontend/./src/components/partials/home/PopularProducts.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical', 'fullWidth', 'firstButton', 'lastButton', 'middleButton']);\nexport default toggleButtonGroupClasses;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst ToggleButtonGroupContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ToggleButtonGroupContext.displayName = 'ToggleButtonGroupContext';\n}\nexport default ToggleButtonGroupContext;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst ToggleButtonGroupButtonContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  ToggleButtonGroupButtonContext.displayName = 'ToggleButtonGroupButtonContext';\n}\nexport default ToggleButtonGroupButtonContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'fullWidth']);\nexport default toggleButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { getValidReactChildren } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport ToggleButtonGroupContext from './ToggleButtonGroupContext';\nimport ToggleButtonGroupButtonContext from './ToggleButtonGroupButtonContext';\nimport toggleButtonClasses from '../ToggleButton/toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled'],\n    firstButton: ['firstButton'],\n    lastButton: ['lastButton'],\n    middleButton: ['middleButton']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, {\n      [`& .${toggleButtonGroupClasses.firstButton}`]: styles.firstButton\n    }, {\n      [`& .${toggleButtonGroupClasses.lastButton}`]: styles.lastButton\n    }, {\n      [`& .${toggleButtonGroupClasses.middleButton}`]: styles.middleButton\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}, ownerState.orientation === 'horizontal' ? {\n  [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n    marginLeft: -1,\n    borderLeft: '1px solid transparent',\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  }\n} : {\n  [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n    marginTop: -1,\n    borderTop: '1px solid transparent',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0\n  }\n}, ownerState.orientation === 'horizontal' ? {\n  [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\n    borderLeft: '1px solid transparent'\n  }\n} : {\n  [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\n    borderTop: '1px solid transparent'\n  }\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      exclusive = false,\n      fullWidth = false,\n      onChange,\n      orientation = 'horizontal',\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback((event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n    onChange(event, newValue);\n  }, [onChange, value]);\n  const handleExclusiveChange = React.useCallback((event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    onChange(event, value === buttonValue ? null : buttonValue);\n  }, [onChange, value]);\n  const context = React.useMemo(() => ({\n    className: classes.grouped,\n    onChange: exclusive ? handleExclusiveChange : handleChange,\n    value,\n    size,\n    fullWidth,\n    color,\n    disabled\n  }), [classes.grouped, exclusive, handleExclusiveChange, handleChange, value, size, fullWidth, color, disabled]);\n  const validChildren = getValidReactChildren(children);\n  const childrenCount = validChildren.length;\n  const getButtonPositionClassName = index => {\n    const isFirstButton = index === 0;\n    const isLastButton = index === childrenCount - 1;\n    if (isFirstButton && isLastButton) {\n      return '';\n    }\n    if (isFirstButton) {\n      return classes.firstButton;\n    }\n    if (isLastButton) {\n      return classes.lastButton;\n    }\n    return classes.middleButton;\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(ToggleButtonGroupContext.Provider, {\n      value: context,\n      children: validChildren.map((child, index) => {\n        if (process.env.NODE_ENV !== 'production') {\n          if (isFragment(child)) {\n            console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n          }\n        }\n        return /*#__PURE__*/_jsx(ToggleButtonGroupButtonContext.Provider, {\n          value: getButtonPositionClassName(index),\n          children: child\n        }, index);\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import * as React from 'react';\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport default function getValidReactChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n  return value === candidate;\n}","'use client';\n\n// @inheritedComponent ButtonBase\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"value\"],\n  _excluded2 = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { internal_resolveProps as resolveProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport ToggleButtonGroupContext from '../ToggleButtonGroup/ToggleButtonGroupContext';\nimport ToggleButtonGroupButtonContext from '../ToggleButtonGroup/ToggleButtonGroupButtonContext';\nimport isValueSelected from '../ToggleButtonGroup/isValueSelected';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const _React$useContext = React.useContext(ToggleButtonGroupContext),\n    {\n      value: contextValue\n    } = _React$useContext,\n    contextProps = _objectWithoutPropertiesLoose(_React$useContext, _excluded);\n  const toggleButtonGroupButtonContextPositionClassName = React.useContext(ToggleButtonGroupButtonContext);\n  const resolvedProps = resolveProps(_extends({}, contextProps, {\n    selected: isValueSelected(inProps.value, contextValue)\n  }), inProps);\n  const props = useThemeProps({\n    props: resolvedProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      disableFocusRipple = false,\n      fullWidth = false,\n      onChange,\n      onClick,\n      selected,\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  const positionClassName = toggleButtonGroupButtonContextPositionClassName || '';\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(contextProps.className, classes.root, className, positionClassName),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;","import React, { useEffect, useState } from \"react\"\nimport { Container, Stack, Box, ToggleButtonGroup, ToggleButton, Button, Card, Skeleton } from \"@mui/material\"\n\n// Utils\nimport { SectionHeading } from \"../../common/Utils\"\nimport { ProductCard } from \"../../common/Card\"\nimport useApiRequest from \"@/hooks/useAPIRequest\"\nimport { Idata, IpriceForEachId } from \"./FeaturedProducts\"\nimport { ENDPOINTS } from \"@/utils/constants\"\nconst defaultData = {\n  \"search\": \"\",\n  \"pageNo\": 0,\n  \"pageSize\": -1,\n  \"sortBy\": \"\",\n  \"sortOrder\": \"\",\n  \"filters\": {\n    \"showOnHomepage\": true\n  }\n}\nfunction SkeletonPopularProducts({ index }: { index: number | string }) {\n  return (<Card className=\"ProductCard\">\n    <Skeleton animation=\"wave\" height={500} style={{ borderRadius: \"10px 10px 0 0\", padding: \"0px\" }} />\n    <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n      <Skeleton animation=\"wave\" height={95} width=\"95%\" style={{ marginBottom: \"4px\" }} />\n      <Skeleton animation=\"wave\" height={70} width=\"95%\" />\n    </div>\n  </Card>)\n}\nfunction PopularProducts() {\n  const [productType, setProductType] = useState('all');\n  const [priceForEachId, setPriceForEachId] = useState<IpriceForEachId | null>(null)\n  const [dataforbody, setDataforbody] = useState<any>(defaultData)\n  const [productIds, setProductIds] = useState({})\n  const { data }: Idata = useApiRequest(ENDPOINTS.getProduct, 'post', dataforbody);\n  const { data: priceData, loading: priceLoading } = useApiRequest(ENDPOINTS.productPrices, 'post', productIds, 60);\n\n  useEffect(() => {\n    const metalId = productType === 'gold' ? 17 : productType === 'silver' ? 18 : undefined;\n    setDataforbody({ ...dataforbody, filters: { ...dataforbody.filters, metalId } })\n  }, [productType])\n  useEffect(() => {\n    if (priceData?.data?.length > 0) {\n      const idwithpriceObj: any = {}\n      priceData?.data?.forEach((product: any) => idwithpriceObj[product?.productId] = product)\n      setPriceForEachId(idwithpriceObj)\n    }\n  }, [priceData])\n  useEffect(() => {\n    if (data?.data?.items?.length > 0) {\n      const productIds = data?.data?.items?.map(product => product?.productId);\n      setProductIds({ productIds })\n    }\n  }, [data])\n  const handleChange = (event: any, newProductType: any) => {\n    if (newProductType !== null) {\n      setProductType(newProductType)\n    }\n  }\n  return (\n    <Container id=\"PopularProducts\" component=\"section\">\n      <SectionHeading\n        title=\"Popular Products\"\n        description=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n      />\n      <Stack className=\"ToggleWrapper\">\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={productType}\n          onChange={handleChange}\n          aria-label=\"Products toggle\"\n          exclusive\n        >\n          <ToggleButton value=\"all\">All</ToggleButton>\n          <ToggleButton value=\"gold\">Gold</ToggleButton>\n          <ToggleButton value=\"silver\">Silver</ToggleButton>\n        </ToggleButtonGroup>\n      </Stack>\n      <Box className=\"ProductsWrapper\">\n        <Box className=\"Wrapper\">\n          {\n            data?.data?.items?.length > 0 ? data?.data?.items?.map((product) => {\n              product.priceWithDetails = priceForEachId ? priceForEachId[product?.productId] : null;\n              return (\n                <ProductCard key={product.productId} product={product} />\n              )\n            })\n              :\n              Array(12).fill(0).map((_, index) => {\n                return (\n                  <Card className=\"ProductCard\" key={index}>\n                    <Skeleton animation=\"wave\" height={500} style={{ borderRadius: \"10px 10px 0 0\", padding: \"0px\" }} />\n                    <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                      <Skeleton animation=\"wave\" height={95} width=\"95%\" style={{ marginBottom: \"4px\" }} />\n                      <Skeleton animation=\"wave\" height={70} width=\"95%\" />\n                    </div>\n                  </Card>\n                );\n              })\n          }\n        </Box>\n        <Stack className=\"Action\">\n          <Button className=\"DiscoverMore\" name='DiscoverMore' aria-label=\"DiscoverMore\" variant=\"contained\">Discover More</Button>\n        </Stack>\n      </Box>\n    </Container>\n  )\n}\n\nexport default React.memo(PopularProducts)"],"names":["getToggleButtonGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","undefined","getToggleButtonUtilityClass","_excluded","ToggleButtonGroupRoot","styled","name","overridesResolver","props","styles","ownerState","grouped","capitalize","orientation","firstButton","lastButton","middleButton","root","vertical","fullWidth","theme","display","borderRadius","vars","shape","flexDirection","width","selected","borderLeft","marginLeft","borderTop","marginTop","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","disabled","inProps","ref","useThemeProps","children","className","color","exclusive","onChange","size","value","other","classes","slots","composeClasses","useUtilityClasses","handleChange","event","buttonValue","index","indexOf","newValue","slice","splice","concat","handleExclusiveChange","context","validChildren","toArray","filter","child","getValidReactChildren","childrenCount","length","getButtonPositionClassName","isFirstButton","isLastButton","role","clsx","Provider","map","isValueSelected","candidate","Array","isArray","_excluded2","ToggleButtonRoot","ButtonBase","selectedColorChannel","selectedColor","palette","text","primary","main","primaryChannel","mainChannel","typography","button","padding","border","divider","action","active","disabledBackground","textDecoration","backgroundColor","hoverOpacity","selectedOpacity","fontSize","pxToRem","_React$useContext","contextValue","contextProps","toggleButtonGroupButtonContextPositionClassName","resolvedProps","resolveProps","disableFocusRipple","onClick","positionClassName","focusRipple","defaultPrevented","defaultData","PopularProducts","_data$data3","_data$data3$items","_data$data4","_data$data4$items","productType","setProductType","useState","priceForEachId","setPriceForEachId","dataforbody","setDataforbody","productIds","setProductIds","data","useApiRequest","ENDPOINTS","getProduct","priceData","loading","priceLoading","productPrices","useEffect","metalId","filters","_priceData$data","_priceData$data2","idwithpriceObj","forEach","product","productId","_data$data","_data$data$items","items","_data$data2","_data$data2$items","React","Container","id","component","SectionHeading","title","description","Stack","ToggleButtonGroup","newProductType","ToggleButton","Box","priceWithDetails","ProductCard","key","fill","_","Card","Skeleton","animation","height","style","justifyContent","alignItems","marginBottom","Button","variant"],"sourceRoot":""}